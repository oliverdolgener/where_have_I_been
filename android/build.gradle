// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  repositories {
    google()
    jcenter()
    maven { url 'https://dl.bintray.com/android/android-tools/' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.2.1'
    classpath 'com.google.gms:google-services:3.2.1'
    classpath 'de.undercouch:gradle-download-task:2.0.0'
    classpath 'com.amazonaws:aws-devicefarm-gradle-plugin:1.3' // https://github.com/awslabs/aws-device-farm-gradle-plugin/releases
  }
}

allprojects {
  repositories {
    // For non-detach
    maven {
      url "$rootDir/maven"
    }
    // For old expoviews to work
    maven {
      url "$rootDir/versioned-abis/expoview-abi26_0_0/maven"
    }
    maven {
      url "$rootDir/versioned-abis/expoview-abi27_0_0/maven"
    }
    maven {
      url "$rootDir/versioned-abis/expoview-abi28_0_0/maven"
    }
    maven {
      url "$rootDir/versioned-abis/expoview-abi29_0_0/maven"
    }
    maven {
      url "$rootDir/versioned-abis/expoview-abi30_0_0/maven"
    }
    maven {
      url "$rootDir/versioned-abis/expoview-abi31_0_0/maven"
    }
    maven {
      url "$rootDir/versioned-abis/expoview-abi32_0_0/maven"
    }
    // For detach
    maven {
      url "$rootDir/../node_modules/expokit/maven"
    }
    maven {
      // We use a modified build of com.android.support.test:runner:1.0.1. Explanation in maven-test/README
      url "$rootDir/maven-test"
    }
    google()
    jcenter()
    maven {
      // Local Maven repo containing AARs with JSC built for Android
      url "$rootDir/../node_modules/jsc-android/dist"
    }
    flatDir {
      dirs 'libs'
      // dirs project(':expoview').file('libs')
    }
    // https://github.com/google/ExoPlayer/issues/5225#issuecomment-445739013
    maven { url 'https://google.bintray.com/exoplayer' }
    maven { url "https://jitpack.io" }

    // Want this last so that we never end up with a stale cache
    mavenLocal()
    maven {
      url 'https://maven.google.com'
    }
    maven {
        url "$rootDir/../node_modules/react-native-background-geolocation/android/libs"
    }
    maven {
        url "$rootDir/../node_modules/react-native-background-fetch/android/libs"
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

/**
-* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
-* !!! THE FOLLOWING IS OPTIONAL BUT HIGHLY RECOMMENDED FOR YOUR SANITY !!!
-* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
*
* Do you hate Gradle conflicts where other plugin require some particular
* version of play-services or define a compileSdkVersion, buildToolsVersion
* which conflicts with that of your app?  Me too!
*
* If you define these key gradle configuration variables globally, the
* background-geolocation plugin (and any other "wise" plugins you've installed)
* can align themselves to YOUR desired versions!  You should define these variables
* as desired according to current values in your app/build.gradle
*
* You'll find that more and more plugins are beginning to wise up to checking
* for the presense of global gradle variables like this.
*
* BackgroundGeolocation is aware of the following variables:
*/
ext {
  compileSdkVersion   = 27
  targetSdkVersion    = 27
  buildToolsVersion   = "27.0.3"
  supportLibVersion   = "27.1.1"
  playServicesVersion = "15.0.1"
}
